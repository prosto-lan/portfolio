const errors_array = ["критическая ошибка", "такого значения нет"];//массив с именами ошибок

let strategy = ["Удаление нецензурных коментариев", "Обсуждение темы с комментатором", "Создание новых постов", "Оценить комментарий"]; 
//Действия модерации
let typecomment = ["Комментарий нецензурный", "В комментарии присутствует вопрос", "Коментатор ошибся", "Много комментариев про ожидание новых постов", "Пользователь сообщил мудрую вещь"]; //типы комментов
function comments(comment){ //Действие с комментом исходя из его типа
  if(comment  == typecomment[0]){ 
      return strategy[0];
    }
    else if(comment  == typecomment[1]){
      return strategy[1];    
    }
    else if(comment == typecomment[2]){
      return strategy[1]; 
    }
    else if(comment == typecomment[3]){
      return strategy[2];
    } 
    else if (comment == typecomment[4]){
      return strategy[3];
    }   
    return errors_array[1];
}

console.log(comments("Комментарий нецензурный"))

const group_characteristic = [1002, "IT Techologies, game development and AI", "Every two days", "Students and teachers"]; 
//Статистика группы

const issuesAndNeeds = [
  "Неосведомленность участников группы в IT сфере",
  "Сложность в начале обучения на JavaScript",
  "Отсутствие практического опыта программирования",
  "Нехватка мотивации для самостоятельного изучения",
  "Непонимание базовых концепций JavaScript (например, асинхронность, замыкания)",
  "Недостаток доступных учебных материалов и ресурсов",
  "Сложности с установкой и настройкой окружения для разработки",
  "Отсутствие четкой структуры усвоения материала",
  "Нехватка обратной связи от наставников",
  "Сложность в решении реальных задач и проектов"
];

let survey = [
  "На каком этапе у вас возникли трудности",
  "Разбор какой игры вы бы хотели увидеть? (Сюжет, идея, создание игры)",
  "Интересен ли вам контент о нейросетях?",
]



console.log(comments("Комментарий нецензурный"))